--- a/src/backend/utils/misc/guc.c
+++ b/src/backend/utils/misc/guc.c
@@ -98,6 +98,7 @@
 #include "utils/tzparser.h"
 #include "utils/varlena.h"
 #include "utils/xml.h"
+#include "../../../port/pg_config_paths.h" /* PGSHAREDIR */
 
 #ifndef PG_KRB_SRVTAB
 #define PG_KRB_SRVTAB ""
@@ -562,6 +563,7 @@ char	   *ConfigFileName;
 char	   *HbaFileName;
 char	   *IdentFileName;
 char	   *external_pid_file;
+char	   *extension_share_directory;
 
 char	   *pgstat_temp_directory;
 
@@ -4237,6 +4239,17 @@ static struct config_string ConfigureNam
 	},
 
 	{
+		{"extension_share_directory", PGC_POSTMASTER, FILE_LOCATIONS,
+			gettext_noop("Path to share directory for extensions"),
+			gettext_noop("This directory contains the extension/ subdirectory for extension control and SQL files. The location is made configurable to allow build-time testing of extension that do not have been installed to their proper location yet."),
+			GUC_SUPERUSER_ONLY
+		},
+		&extension_share_directory,
+		PGSHAREDIR,
+		NULL, NULL, NULL
+	},
+
+	{
 		{"ssl_library", PGC_INTERNAL, PRESET_OPTIONS,
 			gettext_noop("Name of the SSL library."),
 			NULL,
--- a/src/include/port.h
+++ b/src/include/port.h
@@ -58,6 +58,7 @@ extern bool path_is_prefix_of_path(const
 extern char *make_absolute_path(const char *path);
 extern const char *get_progname(const char *argv0);
 extern void get_share_path(const char *my_exec_path, char *ret_path);
+extern void get_extension_share_path(const char *my_exec_path, char *ret_path);
 extern void get_etc_path(const char *my_exec_path, char *ret_path);
 extern void get_include_path(const char *my_exec_path, char *ret_path);
 extern void get_pkginclude_path(const char *my_exec_path, char *ret_path);
--- a/src/port/path.c
+++ b/src/port/path.c
@@ -15,6 +15,7 @@
 
 #ifndef FRONTEND
 #include "postgres.h"
+#include "utils/guc.h"
 #else
 #include "postgres_fe.h"
 #endif
@@ -706,6 +707,18 @@ get_share_path(const char *my_exec_path,
 	make_relative_path(ret_path, PGSHAREDIR, PGBINDIR, my_exec_path);
 }
 
+#ifndef FRONTEND
+/*
+ *	get_extension_share_path. Differs from get_share_path when
+ *	extension_share_directory is set.
+ */
+void
+get_extension_share_path(const char *my_exec_path, char *ret_path)
+{
+	make_relative_path(ret_path, extension_share_directory, PGBINDIR, my_exec_path);
+}
+#endif
+
 /*
  *	get_etc_path
  */
--- a/src/backend/commands/extension.c
+++ b/src/backend/commands/extension.c
@@ -373,7 +373,7 @@ get_extension_control_directory(void)
 	char		sharepath[MAXPGPATH];
 	char	   *result;
 
-	get_share_path(my_exec_path, sharepath);
+	get_extension_share_path(my_exec_path, sharepath);
 	result = (char *) palloc(MAXPGPATH);
 	snprintf(result, MAXPGPATH, "%s/extension", sharepath);
 
@@ -386,7 +386,7 @@ get_extension_control_filename(const cha
 	char		sharepath[MAXPGPATH];
 	char	   *result;
 
-	get_share_path(my_exec_path, sharepath);
+	get_extension_share_path(my_exec_path, sharepath);
 	result = (char *) palloc(MAXPGPATH);
 	snprintf(result, MAXPGPATH, "%s/extension/%s.control",
 			 sharepath, extname);
@@ -410,7 +410,7 @@ get_extension_script_directory(Extension
 	if (is_absolute_path(control->directory))
 		return pstrdup(control->directory);
 
-	get_share_path(my_exec_path, sharepath);
+	get_extension_share_path(my_exec_path, sharepath);
 	result = (char *) palloc(MAXPGPATH);
 	snprintf(result, MAXPGPATH, "%s/%s", sharepath, control->directory);
 
--- a/src/include/utils/guc.h
+++ b/src/include/utils/guc.h
@@ -270,6 +270,7 @@ extern PGDLLIMPORT char *ConfigFileName;
 extern char *HbaFileName;
 extern char *IdentFileName;
 extern char *external_pid_file;
+extern char *extension_share_directory;
 
 extern PGDLLIMPORT char *application_name;
 
